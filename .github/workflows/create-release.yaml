name: Create release(manually)
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., v0.2.2)'
        required: true
        type: string

permissions:
  id-token: write
  contents: write
  packages: write

env:
  GO_VERSION: '1.24'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-sudo: true
          disable-telemetry: true

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@8e57b58e57be52ac95949151e2777ffda8501267 # v5.4.0
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Checkout the repository at the release branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.inputs.release_version }}

      - name: Validate inputs
        run: |
          echo "Creating release ${{ github.event.inputs.release_version }}"
          if [[ ! "${{ github.event.inputs.release_version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Release version must follow format vX.Y.Z"
            exit 1
          fi

      - name: Check if release already exists
        id: check-release
        run: |
          TAG="${{ github.event.inputs.release_version }}"
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release $TAG already exists, skipping creation"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release $TAG does not exist, proceeding with creation"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Goreleaser
        if: steps.check-release.outputs.exists == 'false'
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          version: latest
          args: release --clean --timeout 60m --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.event.inputs.release_version }}

      - name: Release already exists
        if: steps.check-release.outputs.exists == 'true'
        run: |
          echo "Release ${{ github.event.inputs.release_version }} already exists."
